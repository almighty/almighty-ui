@import "../../assets/stylesheets/variables";
@import "../../assets/stylesheets/custom";
@import "../../assets/stylesheets/color-variables";

.board {
  margin: em(20) auto;
  padding-top: em(96);
  display: flex;
  background-color: $color-pf-white;
  align-items: flex-start;
   -webkit-flex-flow: row wrap;
   justify-content: space-around;
  .lane {
    flex: 1 1 em(320);
    margin: 0 em(10);
    position: relative;
    .card {
      margin: em(10);
      height: em(100);
      background: lighten($color-pf-black, 70);
      overflow: scroll;
    }
  }
}

/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */
.lane div,
.gu-mirror {
  margin: em(10);
  padding: em(10);
  background-color: lighten($color-pf-black, 85);
  transition: opacity 0.4s ease-in-out;
}
.lane{
  div {
    cursor: move;
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
  }
}
.gu-mirror {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
.lane{
   .ex-moved {
      background-color: lighten($color-pf-red-100, 0.4);
   }
}
.lane.ex-over {
  background-color: rgba($color-pf-white, 0.3);
}
.handle {
  padding: 0 em(5);
  margin-right: em(5);
  background-color: rgba(0, 0, 0, 0.4);
  cursor: move;
}

//Third party related styling --> Refactoring needed
.gu-mirror{
  position:fixed!important;
  margin:0!important;
  z-index:9999!important;
  opacity:.8;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter:alpha(opacity=80)}.gu-hide{display:none!important;
}
  .gu-unselectable{
    -webkit-user-select:none!important;
    -moz-user-select:none!important;
    -ms-user-select:none!important;
    user-select:none!important;
  }
  .gu-transit{
    opacity:.2;
    -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter:alpha(opacity=20);
  }
  @media (max-width: ($grid-float-breakpoint - 1)){
  .board{ padding-top: em(11); }
  }
