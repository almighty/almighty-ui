@import "../../../assets/stylesheets/variables";
@import "../../../assets/stylesheets/custom";
@import "../../../assets/stylesheets/color-variables";

.boardWrapper{
  position: relative;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  height: 100%;
  .board {
    user-select: none;
    white-space: nowrap;
    margin-bottom: em(10);
    overflow-x: auto;
    overflow-y: hidden;
    padding-bottom: em(10);
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    .board-lane {
      width: em(270);
      margin: 0 em(5);
      height: 100%;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
      display: inline-block;
      vertical-align: top;
      white-space: normal;
      overflow-y: scroll;
      .board-lane-column{
        background: $color-pf-black-200;
        @include Border(1px, solid ,$color-pf-black-300);
        padding: em(20);
        .lane-header{
          text-align: $textCenter;
          width: $width100;
          float: left;
          padding-bottom: em(5);
          .issueCount{
            background: $color-pf-white;
            padding: 0 em(8);
            margin-left: em(5);
            font-size: em(11);
            font-weight: 500;
          }
        }
        .board-card{
          width: $width100;
          float: left;
          @include Border(1px, solid , $color-pf-black-400);
          background: $color-pf-white;
          padding: em(15);
          margin:em(5) 0;
          > aside {
            width: $width100;
            float: left;
            .wi-type-icon{
              padding: em(7) em(6);
              font-size: em(10);
            }
            .multiline-truncation{
              @include multiline-truncate($font-size: 1em, $line-height: 1.3, $lines-to-show: 3, $trunc-bg: $color-pf-white);

            }
          }
        }
      }
    }
  }
}
/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */

.gu-mirror {
  margin: em(10);
  padding: em(10);
  background-color: lighten($color-pf-black, 85);
  transition: opacity 0.4s ease-in-out;
}
/*.board-lane{
  div {
    cursor: move;
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
  }
}
.gu-mirror {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
.board-lane{
   .ex-moved {
      background-color: lighten($color-pf-red-100, 0.4);
   }
}
.board-lane.ex-over {
  background-color: rgba($color-pf-white, 0.3);
}
.handle {
  padding: 0 em(5);
  margin-right: em(5);
  background-color: rgba(0, 0, 0, 0.4);
  cursor: move;
}

//Third party related styling --> Refactoring needed
.gu-mirror{
  position:fixed!important;
  margin:0!important;
  z-index:9999!important;
  opacity:.8;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter:alpha(opacity=80)}.gu-hide{display:none!important;
}
  .gu-unselectable{
    -webkit-user-select:none!important;
    -moz-user-select:none!important;
    -ms-user-select:none!important;
    user-select:none!important;
  }
  .gu-transit{
    opacity:.2;
    -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter:alpha(opacity=20);
  }
*/

@media (max-width: $grid-float-breakpoint){
  /*Toggle the details panel's width and left margin*/
}
